version: "3.8"

services:
  backend:
    build:
      context: ./src/backend
      dockerfile: Dockerfile
      target: development
      args:
        NODE_ENV: development
        USER_ID: 1000
        GROUP_ID: 1000
    ports:
      - "3000:3000"
    volumes:
      - ./src/backend:/usr/src/app:ro
      - /usr/src/app/node_modules
      - backend_logs:/var/log/myelixir
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://mongodb:27017/myelixir
      REDIS_URI: redis://redis:6379
      PORT: 3000
      MEDPLUM_API_URL: https://api.medplum.com/fhir/R4
      LOG_LEVEL: debug
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /run

  web:
    build:
      context: ./src/web
      dockerfile: Dockerfile
      target: development
      args:
        NODE_ENV: development
        USER_ID: 1000
        GROUP_ID: 1000
    ports:
      - "80:80"
    volumes:
      - ./src/web:/app:ro
      - /app/node_modules
      - frontend_logs:/var/log/nginx
    environment:
      NODE_ENV: development
      VITE_API_URL: http://localhost:3000
      PORT: 80
      VITE_ENABLE_MOCK: "true"
      VITE_LOG_LEVEL: debug
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 30s
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/cache/nginx

  mongodb:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - mongodb_logs:/var/log/mongodb
    environment:
      MONGO_INITDB_DATABASE: myelixir
      MONGO_INITDB_ROOT_USERNAME_FILE: /run/secrets/mongo_root_username
      MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/mongo_root_password
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - redis_logs:/var/log/redis
    command: [
      "redis-server",
      "--appendonly", "yes",
      "--requirepass", "${REDIS_PASSWORD}",
      "--maxmemory", "512mb",
      "--maxmemory-policy", "allkeys-lru"
    ]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true

volumes:
  mongodb_data:
    driver: local
    driver_opts:
      type: none
      device: /data/mongodb
      o: bind
  mongodb_config:
    driver: local
  mongodb_logs:
    driver: local
  redis_data:
    driver: local
    driver_opts:
      type: none
      device: /data/redis
      o: bind
  redis_logs:
    driver: local
  backend_logs:
    driver: local
  frontend_logs:
    driver: local

networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: myelixir_net
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
          gateway: 172.28.0.1

secrets:
  mongo_root_username:
    file: ./secrets/mongo_root_username.txt
  mongo_root_password:
    file: ./secrets/mongo_root_password.txt