apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: production
  labels:
    app: myelixir
    component: backend
    environment: production
    compliance: hipaa-gdpr
spec:
  replicas: 3
  selector:
    matchLabels:
      app: myelixir
      component: backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: myelixir
        component: backend
        environment: production
        compliance: hipaa-gdpr
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        security.myelixir.com/compliance-validated: "true"
        monitoring.myelixir.com/health-check-path: "/health"
    spec:
      containers:
      - name: backend
        image: myacr.azurecr.io/myelixir/backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          protocol: TCP
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            cpu: "1000m"
            memory: "1Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        envFrom:
        - configMapRef:
            name: backend-config
        - secretRef:
            name: backend-secrets
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      securityContext:
        fsGroup: 1000
        supplementalGroups:
        - 1000
      imagePullSecrets:
      - name: acr-secret